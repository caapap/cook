"use strict";
/**
 * @fileoverview
 *
 * This rule is triming spaces of the whole string.
 *
 * Options
 * - trimSpace: boolean | undefined
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultConfig = void 0;
const messages_1 = require("./messages");
const util_1 = require("./util");
const generateHandler = (options) => {
    const trimSpaceOption = options === null || options === void 0 ? void 0 : options.trimSpace;
    return (token, index, group) => {
        if (!trimSpaceOption) {
            return;
        }
        // make sure it's the whole string
        if (!group.startValue && index === 0) {
            // remove inner space before
            if (group.modifiedInnerSpaceBefore) {
                (0, util_1.checkInnerSpaceBefore)(group, '', messages_1.TRIM_SPACE);
            }
            // remove all spaces after beginning marks
            if ((0, util_1.isWrapper)(token)) {
                (0, util_1.findConnectedWrappers)(group, token).forEach((x) => (0, util_1.checkSpaceAfter)(x, '', messages_1.TRIM_SPACE));
            }
            // get last visible content token -> remove all spaces after
            const lastToken = group[group.length - 1];
            if (lastToken) {
                // 1. last token is a mark -> find last visible content token
                // 2. last token is visible content
                if ((0, util_1.isWrapper)(lastToken)) {
                    const lastContentToken = (0, util_1.findVisibleTokenBefore)(group, token);
                    if (lastContentToken) {
                        (0, util_1.findConnectedWrappers)(group, lastToken).forEach((x) => (0, util_1.checkSpaceAfter)(x, '', messages_1.TRIM_SPACE));
                        (0, util_1.checkSpaceAfter)(lastContentToken, '', messages_1.TRIM_SPACE);
                    }
                }
                else {
                    (0, util_1.checkSpaceAfter)(lastToken, '', messages_1.TRIM_SPACE);
                }
            }
        }
    };
};
exports.defaultConfig = {
    trimSpace: true
};
exports.default = generateHandler;
