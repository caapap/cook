"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseIngoredCase = void 0;
const ignoredCaseMatcher = /^(?:(?<prefix>.+?)-,)?(?<textStart>.+?)(?:,(?<textEnd>.+?))?(?:,-(?<suffix>.+?))?$/;
const parseIngoredCase = (text) => {
    const matchResult = text.match(ignoredCaseMatcher);
    if (matchResult) {
        const { prefix, textStart, textEnd, suffix } = matchResult.groups;
        return {
            prefix,
            textStart,
            textEnd,
            suffix
        };
    }
};
exports.parseIngoredCase = parseIngoredCase;
const parser = (data) => {
    const { ignoredByRules, value: raw } = data;
    const matcher = /<!--\s*zhlint\s*ignore:\s*(.+?)\s*-->/g;
    let result;
    while ((result = matcher.exec(raw)) !== null) {
        const ignoredCase = (0, exports.parseIngoredCase)(result[1]);
        if (ignoredCase) {
            ignoredByRules.push(ignoredCase);
        }
    }
    return data;
};
exports.default = parser;
